- name: "configuring backend"
  hosts: backend
  become: yes
  vars:
    db_user: root
    db_password: ExpenseApp@1
    mysql_host: mysql.kondarao.online
  tasks:
  - name: "disableing node js"
    ansible.builtin.command: "dnf module disable nodejs -y"
  - name: "enabled node js"
    ansible.builtin.command: "dnf module enable nodejs:20 -y"

  - name: "Installing node js and mysql"
    ansible.builtin.package:
      name: "{{item}}"
      state: present
    loop:
    - nodejs
    - mysql
  - name: "adding user"
    ansible.builtin.user:
      name: expense

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download backend file
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: Unarchive a file that is already on the remote machine
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

  - name: Install packages based on package.json.
    community.general.npm:
      path: /app

  - name: Copy a "backendservice" file on the remote machine for editing
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service
      #remote_src: yes

  - name: "moving schema to mysql"
    community.mysql.mysql_db:
      login_user: "{{db_user}}"
      login_password: "{{db_password}}"
      login_host: "{{mysql_host}}"
      name: all
      state: import
      target: /app/schema/backend.sql
  
  - name: Enable service backend, and not touch the state
    ansible.builtin.service:
      name: backend
      daemon_reload: true
      state: restarted
      enabled: yes
      